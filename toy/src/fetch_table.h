/* Generated by gep (123/06/18 13:34:17) copyright (c) 2008 IRIT - UPS */

#ifndef GLISS_TOY_INCLUDE_TOY_FETCH_TABLE_H
#define GLISS_TOY_INCLUDE_TOY_FETCH_TABLE_H


#if defined(__cplusplus)
extern  "C"
{
#endif

#include <toy/id.h>
#include <toy/gen_int.h>

#include <toy/mem.h>
#include <toy/grt.h>
#include <toy/error.h>
#include <toy/gen_int.h>
#include <toy/loader.h>
#include <toy/code.h>


/* data structures */

typedef enum
{
   INSTRUCTION,
   TABLEFETCH
} Type_Decode;

typedef struct
{
	Type_Decode type;
	void *ptr;	/* will be used to store an instruction ID or the address of a Table_Decodage */
} Decode_Ent;

/* RISC single instruction set */
typedef struct Table_Decodage {
        uint16_t        mask;
        Decode_Ent      *table;
} Table_Decodage;

static Decode_Ent table_table[16] = {
	/* 0X0,0 */	{INSTRUCTION, (void *)TOY_SET_S___ID}	/* SET_S___ID, 16 bits, mask=1111000000000000, val=0000XXXXXXXXXXXX */,
	/* 0X1,1 */	{INSTRUCTION, (void *)TOY_ADD_S__S__S}	/* ADD_S__S__S, 16 bits, mask=1111000000000000, val=0001XXXXXXXXXXXX */,
	/* 0X2,2 */	{INSTRUCTION, (void *)TOY_BEQ_S__S__D}	/* BEQ_S__S__D, 16 bits, mask=1111000000000000, val=0010XXXXXXXXXXXX */,
	{INSTRUCTION, (void *)TOY_UNKNOWN},
	{INSTRUCTION, (void *)TOY_UNKNOWN},
	{INSTRUCTION, (void *)TOY_UNKNOWN},
	{INSTRUCTION, (void *)TOY_UNKNOWN},
	{INSTRUCTION, (void *)TOY_UNKNOWN},
	{INSTRUCTION, (void *)TOY_UNKNOWN},
	{INSTRUCTION, (void *)TOY_UNKNOWN},
	{INSTRUCTION, (void *)TOY_UNKNOWN},
	{INSTRUCTION, (void *)TOY_UNKNOWN},
	{INSTRUCTION, (void *)TOY_UNKNOWN},
	{INSTRUCTION, (void *)TOY_UNKNOWN},
	{INSTRUCTION, (void *)TOY_UNKNOWN},
	{INSTRUCTION, (void *)TOY_UNKNOWN}
};
static Table_Decodage _table = {0XF000, table_table};
Table_Decodage *toy_table = &_table;




#if defined(__cplusplus)
}
#endif

#endif /* GLISS_TOY_INCLUDE_TOY_FETCH_TABLE_H */
